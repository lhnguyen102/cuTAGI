name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  build_linux:
    name: Linux Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        cuda: ["12.2"]
        python_version: ["3.10", "3.11", "3.12"]
    if: ${{ github.event.pull_request.draft == false }}
    steps:
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2.0.2
        with:
          cmake-version: "3.22.x"

      - name: Use cmake
        run: cmake --version

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install CUDA
        env:
          cuda: ${{ matrix.cuda }}
        run: ./extern/action_scripts/install_cuda_ubuntu.sh
        shell: bash

      - name: Install build dependencies (setuptools, wheel)
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install setuptools wheel

      - name: Build wheels
        run: python setup.py bdist_wheel --plat-name=manylinux2014_x86_64

      - uses: actions/upload-artifact@v4
        with:
          name: linux-wheels-${{ matrix.python_version }}
          path: dist/*.whl

  build_macos:
    name: MACOS Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-13
            python_version: "3.10"
            cibuildwheel_python: "cp310-*"

          - os: macos-13
            python_version: "3.11"
            cibuildwheel_python: "cp311-*"

          - os: macos-13
            python_version: "3.12"
            cibuildwheel_python: "cp312-*"

    if: ${{ github.event.pull_request.draft == false }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # Used to host cibuildwheel
      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: build dependencies (setuptools, wheel)
        run: python3 -m pip install cibuildwheel==2.21.3

      - name: Build wheels
        run: python3 -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: ${{ matrix.cibuildwheel_python }}
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_BUILD_VERBOSITY: 1

      - uses: actions/upload-artifact@v4
        with:
          name: macos-wheels-${{ matrix.python_version }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: SDist Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        python_version: ["3.10", "3.11", "3.12"]
    if: ${{ github.event.pull_request.draft == false }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Build SDist
        run: |
          python -m pip install setuptools wheel twine
          python setup.py sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist-${{ matrix.python_version }}
          path: dist/*.tar.gz

  test:
    name: Test
    needs: [build_linux, build_macos, build_sdist]
    runs-on: ubuntu-22.04
    if: ${{ github.event.pull_request.draft == false }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2.0.2
        with:
          cmake-version: "3.22.x"

      - name: cmake version
        run: cmake --version

      - name: Download Linux wheels artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-wheels-3.10
          path: dist/linux

      - name: Download macOS wheels artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-wheels-3.10
          path: dist/macos

      - name: Download SDist artifact
        uses: actions/download-artifact@v4
        with:
          name: sdist-3.10
          path: dist/sdist

      - name: Build binary
        run: |
          sh scripts/compile.sh Release

      - name: Run tests
        run: |
          sh build/run_tests --cpu
          python3 -m test.python.main --cpu

  upload_pypi:
    name: PyPI Upload
    needs: [test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.10", "3.11", "3.12"]
        os: ["linux", "macos", "sdist"]
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Download Linux/macOS/SDist artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os }}-wheels-${{ matrix.python_version }}
          path: dist/${{ matrix.os }}-${{ matrix.python_version }}

      # Upload to PyPI
      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@v1.9.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
          skip_existing: true
          verbose: true
          package_directory: dist/${{ matrix.os }}-${{ matrix.python_version }}

